from collections import deque
class Solution:
    def shortestDistance(self,n,m,grid,x,y):
        if grid[0][0]==0:
            return -1
	    vis=[[0 for i in range(m)]for j in range(n)]
	    q=deque()
	    q.append([0,0,0])
	    vis[0][0]=1
	    while len(q)!=0:
	        arr=q.popleft()
	        i,j,d=arr[0],arr[1],arr[2]
	        if i==x and j==y:
	            return d
	        if i-1>=0 and grid[i-1][j]!=0 and vis[i-1][j]==0:
	            q.append([i-1,j,d+1])
	            vis[i-1][j]=1
	        if i+1<n and grid[i+1][j]!=0 and vis[i+1][j]==0:
	            q.append([i+1,j,d+1])
	            vis[i+1][j]=1
	        if j-1>=0 and grid[i][j-1]!=0 and vis[i][j-1]==0:
	            q.append([i,j-1,d+1])
	            vis[i][j-1]=1
	        if j+1<m and grid[i][j+1]!=0 and vis[i][j+1]==0:
	            q.append([i,j+1,d+1])
	            vis[i][j+1]=1
	    return -1
